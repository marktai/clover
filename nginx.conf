user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    # http context

    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   1d;
        application/javascript     1d;
        application/font-woff      1d;
        application/font-woff2     1d;
        application/x-font-ttf     1d;
        ~image/                    1d;
        ~audio/                    1d;
        ~video/                    1d;
    }

    upstream backend {
        server backend:80;
    }

    upstream frontend {
        server frontend:80;
    }

    upstream websockets {
        server websockets:80;
    }

    server  {
        listen 80;

        location /api/ {
            proxy_pass http://backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
            proxy_set_header SCRIPT_NAME /api;
            proxy_set_header Host $http_host;
            proxy_redirect off;
        }

        # stupid django redirects
        location /static/ {
            proxy_pass http://backend/static/;
            proxy_http_version 1.1;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
        }

        # stupid django redirects
        location /admin/ {
            proxy_pass http://backend/admin/;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
        }

        location /ws/ {
            proxy_pass http://websockets/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
